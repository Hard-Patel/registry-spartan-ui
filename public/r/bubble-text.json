{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "bubble-text",
  "type": "registry:component",
  "title": "Bubble Text",
  "description": "Bubble text is a lens like view which shows an inverted things through the bubble",
  "dependencies": [
    "motion",
    "tailwind-merge",
    "clsx"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/BubbleText.tsx",
      "content": "import { cn } from \"@/lib/utils\";\nimport { motion } from \"motion/react\";\nimport { useRef, useState } from \"react\";\n\nexport const BubbleText = ({\n  text = \"The digital marketing agency\",\n  bubbleSize = 120,\n  className = \"\",\n}) => {\n  const [isHovering, setIsHovering] = useState(false);\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n  const containerRef = useRef(null);\n\n  const handleMouseEnter = () => {\n    setIsHovering(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n  };\n\n  const handleMouseMove = (e: any) => {\n    if (containerRef.current) {\n      const rect = containerRef.current.getBoundingClientRect();\n      setMousePosition({\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      });\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center p-8\">\n      <div\n        ref={containerRef}\n        className=\"relative cursor-pointer\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onMouseMove={handleMouseMove}\n      >\n        {/* Main text layer */}\n        <div\n          className={cn(\n            className,\n            `select-none leading-tight tracking-tight relative z-10`\n          )}\n        >\n          {text}\n        </div>\n\n        {/* Bubble with smooth animation using framer-motion */}\n        {isHovering && (\n          <motion.div\n            initial={{\n              left: mousePosition.x,\n              top: mousePosition.y,\n              height: 0,\n              width: 0,\n            }}\n            animate={{\n              left: mousePosition.x - bubbleSize / 2,\n              top: mousePosition.y - bubbleSize / 2,\n              width: bubbleSize,\n              height: bubbleSize,\n            }}\n            transition={{\n              type: \"spring\",\n              stiffness: 600,\n              damping: 100,\n            }}\n            className=\"absolute pointer-events-none rounded-full\"\n            style={{\n              backgroundColor: \"white\",\n              mixBlendMode: \"difference\",\n              zIndex: 20,\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:component",
      "target": "components/spartan-ui/BubbleText.tsx"
    },
    {
      "path": "registry/new-york/lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "type": "registry:lib",
      "target": "lib/utils.ts"
    }
  ]
}